<?php

namespace App\Repository\GTWIN;

use App\Entity\GTWIN\Institucion;
use Doctrine\ORM\EntityRepository;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * TipoIngresoRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TipoIngresoRepository extends EntityRepository
{
//    public function findAll() {
    //	$qb = $this->createQueryBuilder('tp');
    //	return $qb->getQuery()->getResult();
//    }

    public function findByInstitucionQB(Institucion $institucion)
    {
        if (null === $institucion) {
            return new ArrayCollection();
        }

        $qb = $this->createQueryBuilder('u')
                        ->andWhere('u.entity.id = :id')
                        ->setParameter('id', $institucion->getId())
                        ->orderBy('u.codigo', 'ASC');

        return $qb;
    }

    public function findByInstitucion($codigoInstitucion)
    {
        $qb = $this->createQueryBuilder('ti')
                ->join('GTWIN:InstitucionTipoIngreso', 'iti', 'with', 'ti.id = iti.tipoIngreso')
                ->join('GTWIN:Institucion', 'i', 'with', 'i.id = iti.institucion')
                ->andWhere('i.codigo = :codigoInstitucion')
                ->setParameter('codigoInstitucion', $codigoInstitucion)
                ->orderBy('i.codigo', 'ASC');

        return $qb->getQuery()->getResult();
    }

    private function __remove_blank_filters($criteria)
    {
        $new_criteria = [];
        foreach ($criteria as $key => $value) {
            if (!empty($value)) {
                $new_criteria[$key] = $value;
            }
        }

        return $new_criteria;
    }
}
