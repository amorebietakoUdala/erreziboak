security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        legacy_bcrypt:
            algorithm: bcrypt
            
        App\Entity\User:
            algorithm: auto
            migrate_from: 
                - legacy_bcrypt

        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        amreu_user_provider:
            entity:
                class: App\Entity\User
                property: username
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: amreu_user_provider

            custom_authenticators:
                    - amreu.login.form.passportauthenticator
                    - amreu.ldap.basic.passportauthenticator
            entry_point: amreu.login.form.passportauthenticator
                
            logout:
                path: user_security_logout

                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/receipts, roles: PUBLIC_ACCESS }
        - { path: ^/api/category/, role: PUBLIC_ACCESS }
        - { path: ^/(es|eu)/returns, roles: ROLE_USER }
        - { path: ^/api/, role: ROLE_API }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
