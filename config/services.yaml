# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  app_name: erreziboak
  domain: "%env(LDAP_ACCOUNTDOMAINNAME)%"
  ldap_users_dn: "%env(LDAP_USERS_DN)%"
  ldap_users_uuid: "%env(LDAP_USERS_UUID)%"
  # Use {username} in the filter where the username has to be replaced.
  ldap_users_filter: "(&(objectclass=Person)(%env(LDAP_USERS_UUID)%={username}))"
  receipt_files_directory: "%kernel.project_dir%/public/uploads/receipt_files"
  mailer_user: "%env(MAILER_USER)%"
  delivery_addresses: "%env(MAILER_SENT_TO)%"
  mipago.sender: "%env(MIPAGO_SENDER)%"
  mailer_sendConfirmation: "%env(bool:MAILER_SEND_CONFIRMATION)%"
  mailer_sendBCC: "%env(bool:MAILER_SEND_BCC)%"
  mailer_BCC_email: "%env(MAILER_BCC_EMAIL)%"
  mailer_from: "%env(MAILER_BCC_EMAIL)%"
  send_receiptfile_messages: "%env(bool:SEND_RECEIPTFILE_MESSAGES)%"
  api_origin: "%env(API_ORIGIN)%"
  returns_file_upload_directory: "%kernel.project_dir%/public/uploads/returns_files"
  send_returns_file_messages: "%env(bool:SEND_RETURNSFILE_MESSAGES)%"
  returns_files_notification_email: "%env(RETURNS_FILE_NOTIFICATION_EMAIL)%"
  debts_file_upload_directory: "%kernel.project_dir%/public/uploads/debts_files"

  c34_initgpty_name: "%env(C34INITGPTY_NM)%"
  c34_initgpty_orgid_id: "%env(C34INITGPTY_ORGID_ID)%"
  c34_dbtr_nm: "%env(C34DBTR_NM)%"
  c34_dbtr_ctry: "%env(C34DBTR_CTRY)%"
  c34_dbtr_adrline1: "%env(C34DBTR_ADRLINE1)%"
  c34_dbtr_adrline2: "%env(C34DBTR_ADRLINE2)%"
  c34_dbtr_orgid_id: "%env(C34DBTR_ORGID_ID)%"
  c34_dbtr_acct_id_iban: "%env(C34DBTR_ACCT_ID_IBAN)%"

  titularity_check_endpoint: "%env(TITULARITY_CHECK_ENDPOINT)%"
  titularity_check_show_last: 1
  request_admin_id: "%env(REQUEST_ADMIN_ID)%"

services:
  Symfony\Component\Ldap\Ldap:
    arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']

  ldap:
    alias: Symfony\Component\Ldap\Ldap

  Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
    arguments:
      - host: "%env(LDAP_HOST)%"
        port: "%env(LDAP_PORT)%"
        encryption: none
        options:
          protocol_version: 3
          referrals: false

  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"
      - "../src/Tests/"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: "../src/Controller/"
    tags: ["controller.service_arguments"]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Service\FileUploader:
    arguments:
      $targetDirectory: "%receipt_files_directory%"

  App\Service\CsvFormatValidator: null

  App\Security\LoginFormAuthenticator:
    class: App\Security\LoginFormAuthenticator
    arguments:
      [
        "@doctrine.orm.default_entity_manager",
        "@router.default",
        "@security.csrf.token_manager",
        "@security.user_password_encoder.generic",
        "@Symfony\\Component\\Ldap\\Ldap",
        "@App\\Repository\\UserRepository",
        "@service_container",
      ]

  App\Utils\IgnoreTablesListener:
    class: App\Utils\IgnoreTablesListener
    public: true
    arguments:
      $ignoredEntities:
        [
          'App:GTWIN\Recibo',
          'App:GTWIN\TipoIngreso',
          'App:GTWIN\TipoOperacion',
          'App:GTWIN\OperacionesExternas',
          'App:GTWIN\OperacionesRecibo',
          'App:GTWIN\MensajesError',
          'App:GTWIN\Person',
          'App:GTWIN\Institucion',
          'App:GTWIN\ConceptoContable',
          'App:GTWIN\ConceptoRenta',
          'App:GTWIN\Tarifa',
          'App:GTWIN\InstitucionTipoIngreso',
          'App:GTWIN\ReferenciaC60',
        ]
    tags:
      - { name: doctrine.event_listener, event: postGenerateSchema }

  App\Service\GTWINIntegrationService:
    class: App\Service\GTWINIntegrationService
    public: true
    arguments: ["@doctrine.orm.oracle_entity_manager", "@monolog.logger"]

  App\Service\C34XmlGenerator:
    class: App\Service\C34XmlGenerator
    public: true
    arguments: ["@parameter_bag"]

  # After 5.1 needs to be defined explicitly if you want autowiring.
  Symfony\Component\DependencyInjection\ContainerInterface: "@service_container"

  Qipsius\TCPDFBundle\Controller\TCPDFController: "@qipsius.tcpdf"
